variables:
  E2E_IMAGE_NAME: docker-public.terrestris.de/terrestris/shogun-gis-client-e2e-tests:latest

stages:
  - deploy
  - e2e

include:
  - project: 'ci-templates/playwright'
    ref: main
    file: '.gitlab-ci-template.yml'

deploy-internal:
  stage: deploy
  image: docker.terrestris.de/alpine:3.18.2
  environment:
    name: internal
  only:
    - internal_deploy@terrestris/shogun-docker
  when: manual
  allow_failure: false
  tags: ['intranet']
  variables:
    TARGET_PATH: /home/$DEPLOY_SSH_USER_INTERNAL/shogun
    SSH_CONNECTION: $DEPLOY_SSH_USER_INTERNAL@$DEPLOY_SSH_HOST_INTERNAL
    CI_DEBUG_TRACE: "true"
  before_script:
    - apk add openssh rsync
  script:
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # Add the SSH key stored in $SSH_PRIVATE_KEY_INTERNAL variable to the agent store
    - echo "$SSH_PRIVATE_KEY_INTERNAL" | ssh-add -
    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh $SSH_CONNECTION mkdir -p $TARGET_PATH
    - scp docker-compose-prod.yml $SSH_CONNECTION:$TARGET_PATH/docker-compose.yml
    - scp common-services.yml $SSH_CONNECTION:$TARGET_PATH/common-services.yml
    - ssh $SSH_CONNECTION docker login -u $NEXUS_USER -p $NEXUS_PASSWORD nexus.terrestris.de
    - ssh $SSH_CONNECTION docker system prune -f
    - ssh $SSH_CONNECTION docker compose --file $TARGET_PATH/docker-compose.yml down
    - rsync -avh --exclude '.git' shogun-admin -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-boot -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-client -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' --exclude 'Dockerfile' --exclude 'geoserver_data' shogun-geoserver -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-gs-interceptor -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-keycloak -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-nginx/terrestris-dev/ -e ssh $SSH_CONNECTION:$TARGET_PATH/shogun-nginx/prod --progress --mkpath
    - rsync -avh --exclude '.git' shogun-postgis -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-print -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - rsync -avh --exclude '.git' shogun-solr -e ssh $SSH_CONNECTION:$TARGET_PATH --progress
    - ssh $SSH_CONNECTION docker compose --file $TARGET_PATH/docker-compose.yml pull
    - ssh $SSH_CONNECTION docker compose --file $TARGET_PATH/docker-compose.yml up -d
    - /builds/terrestris/shogun-docker/scripts/waitForStart.sh $DEPLOY_SSH_HOST_INTERNAL

run_e2e_tests:
  only:
    - internal_deploy@terrestris/shogun-docker
  needs: ["deploy-internal"]
